@model SistemaTickets.Models.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container mt-4">
    <h2 class="mb-4">Panel de Seguimiento de Tickets</h2>

    <div class="row">
        <div class="col-md-4">
            <div class="card text-white bg-primary mb-3 shadow">
                <div class="card-body">
                    <h5 class="card-title">Tickets Abiertos</h5>
                    <p class="card-text display-6">@Model.TotalAbiertos</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-warning mb-3 shadow">
                <div class="card-body">
                    <h5 class="card-title">En Progreso</h5>
                    <p class="card-text display-6">@Model.TotalEnProgreso</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-success mb-3 shadow">
                <div class="card-body">
                    <h5 class="card-title">Tickets Resueltos</h5>
                    <p class="card-text display-6">@Model.TotalResueltos</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-6 mb-4">
            <div class="card shadow">
                <div class="card-header">Estado de los Tickets</div>
                <div class="card-body">
                    <canvas id="estadoChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6 mb-4">
            <div class="card shadow">
                <div class="card-header">Tickets por Categoría</div>
                <div class="card-body">
                    <canvas id="categoriaChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-2">
        <div class="col-md-6 mb-4">
            <div class="card shadow">
                <div class="card-header">Tickets por Día de la Semana</div>
                <div class="card-body">
                    <canvas id="semanaChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6 mb-4">
            <div class="card shadow">
                <div class="card-header">Tickets por Usuario</div>
                <div class="card-body">
                    <canvas id="usuarioChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- NUEVO: Gráfico Tiempos de Resolución -->
    <div class="row mt-4">
        <div class="col-md-12 mb-4">
            <div class="card shadow">
                <div class="card-header">Tiempos de Resolución (horas) por Ticket</div>
                <div class="card-body">
                    <canvas id="resolucionChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Estado de los Tickets (Pie)
    const estadoChart = new Chart(document.getElementById('estadoChart'), {
        type: 'pie',
        data: {
            labels: ['Abiertos', 'En Progreso', 'Resueltos'],
            datasets: [{
                data: [@Model.TotalAbiertos, @Model.TotalEnProgreso, @Model.TotalResueltos],
                backgroundColor: ['#007bff', '#ffc107', '#28a745']
            }]
        }
    });

    // Tickets por Categoría (Bar)
    const categoriaChart = new Chart(document.getElementById('categoriaChart'), {
        type: 'bar',
        data: {
            labels: [@Html.Raw(string.Join(",", Model.TicketsPorCategoria.Keys.Select(k => $"\"Categoría {k}\"")))],
            datasets: [{
                label: 'Tickets',
                data: [@string.Join(",", Model.TicketsPorCategoria.Values)],
                backgroundColor: '#17a2b8'
            }]
        }
    });

    // Tickets por Día de la Semana (Line)
    const semanaChart = new Chart(document.getElementById('semanaChart'), {
        type: 'line',
        data: {
            labels: [@Html.Raw(string.Join(",", Model.TicketsPorDiaSemana.Keys.Select(k => $"\"{k}\"")))],
            datasets: [{
                label: 'Tickets',
                data: [@string.Join(",", Model.TicketsPorDiaSemana.Values)],
                borderColor: '#6610f2',
                fill: false
            }]
        }
    });

    // Tickets por Usuario (Bar)
    const usuarioChart = new Chart(document.getElementById('usuarioChart'), {
        type: 'bar',
        data: {
            labels: [@Html.Raw(string.Join(",", Model.TicketsPorUsuario.Keys.Select(k => $"\"Usuario {k}\"")))],
            datasets: [{
                label: 'Tickets',
                data: [@string.Join(",", Model.TicketsPorUsuario.Values)],
                backgroundColor: '#fd7e14'
            }]
        }
    });

    // NUEVO: Gráfico de Tiempos de Resolución
    const resolucionChart = new Chart(document.getElementById('resolucionChart'), {
        type: 'bar',
        data: {
            labels: [@Html.Raw(string.Join(",", Model.TiemposResolucionHoras.Keys.Select(id => $"\"Ticket {id}\"")))],
            datasets: [{
                label: 'Horas para Resolver',
                data: [@string.Join(",", Model.TiemposResolucionHoras.Values.Select(v => v.ToString("F2", System.Globalization.CultureInfo.InvariantCulture)))],
                backgroundColor: '#6f42c1'
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    title: {
                        display: true,
                        text: 'Horas'
                    }
                }
            }
        }
    });
</script>
